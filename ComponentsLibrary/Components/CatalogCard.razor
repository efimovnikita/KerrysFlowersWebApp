@using Microsoft.JSInterop

<article class="w-[300px] flex flex-col items-center text-text1 relative">
    <div @ref="_photoContainer" class="scrollbar scrollbar-h-2 scrollbar-thumb-gray-400 scrollbar-track-white overflow-x-auto flex snap-x snap-always snap-mandatory first:rounded-t-xl last:rounded-t-xr" id="photo-container">
        @foreach (var image in Violet.Images)
        {
            var base64ImageSrc = $"data:image/jpeg;base64,{image.W500}";

            <div class="snap-center shrink-0">
                <img
                    class="w-[300px] h-[300px] object-cover"
                    src="@base64ImageSrc"
                    alt="Фотография фиалки @Violet.Name"/>
            </div>
        }
        @if (Violet.NewLabel)
        {
            <div class="flex justify-center items-center font-bold p-2 bg-label rounded-xl text-white text-sm absolute bottom-24 -left-5">
                <p>New!</p>
            </div>
        }
    </div>
    <a href="@($"/details/{Violet.TransliteratedName}")" title="@Violet.Name">
        <div class="w-[300px] flex justify-center items-center bg-white p-5 text-lg font-bold rounded-b-xl hover:underline decoration-2 underline-offset-2">
            @{
                var name = Violet.Name;
                if (name.Length > 23)
                {
                    var substring = name[..20];
                    substring = $"{substring}...";
                    name = substring;
                }
            }

            @name
        </div>
    </a>
</article>

@code
{
    [Inject] private IJSRuntime JsRuntime { get; set; }

    [Parameter] public Violet Violet { get; set; }

    private ElementReference _photoContainer;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsRuntime.InvokeVoidAsync("initializeHorizontalScroll", _photoContainer);
        }
    }

    private void SetActive(Image image)
    {
        Violet.Images.ForEach(i => i.Active = false);
        image.Active = true;
    }
}
